version: '3'
services:
  db:
    image: postgres:11
    env_file:
      - .env
    volumes:
      - db-content:/var/lib/postgresql/data
    networks:
      - overlay

  django:
    image: epickiwi/bdecesi-django
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - VERSION=${VERSION}
      - ELASTIC_HOST=elasticsearch:9200
    depends_on:
      - db
      - elasticsearch
    volumes:
      - user-media:/code/src/user-media
      - static-files:/code/src/static-files
    networks:
      - overlay
    deploy:
      replicas: 1

  proxy:
    image: epickiwi/bdecesi-proxy
    volumes:
      - user-media:/var/media
      - static-files:/var/static
    depends_on:
      - django
      - db
    networks:
      - overlay
      - traefik-net
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.services.bde-cesi.loadbalancer.server.port: "80"

        traefik.http.routers.bde-cesi.entrypoints: web-secure
        traefik.http.routers.bde-cesi.rule: "Host(`bdecesilyon.fr`)"
        traefik.http.routers.bde-cesi.tls.certresolver: letsencrypt

        traefik.http.routers.bde-cesi-insecure.entrypoints: web
        traefik.http.routers.bde-cesi-insecure.rule: "Host(`bdecesilyon.fr`)"
        traefik.http.routers.bde-cesi-insecure.middlewares: force-https@file

        traefik.http.routers.bde-cesi-insecure-old.entrypoints: web
        traefik.http.routers.bde-cesi-insecure-old.rule: "Host(`bdecesi.epickiwi.fr`)"
        traefik.http.routers.bde-cesi-insecure-old.middlewares: bde-cesi-redirect

        traefik.http.routers.bde-cesi-old.entrypoints: web-secure
        traefik.http.routers.bde-cesi-old.rule: "Host(`bdecesi.epickiwi.fr`)"
        traefik.http.routers.bde-cesi-old.middlewares: bde-cesi-redirect
        traefik.http.routers.bde-cesi-old.tls.certresolver: letsencrypt

        traefik.http.middlewares.bde-cesi-redirect.redirectregex.regex: "^(https?)://bdecesi.epickiwi.fr/(.*)"
        traefik.http.middlewares.bde-cesi-redirect.redirectregex.replacement: "$${1}://bdecesilyon.fr/$${2}"
        traefik.http.middlewares.bde-cesi-redirect.redirectregex.permanent: "true"

  analytics-db:
    image: "mariadb:10.4"
    volumes: 
      - "analytics-db-content:/var/lib/mysql"
    networks:
      - overlay
    env_file:
      - .env

  analytics:
    image: "matomo"
    volumes:
      - "analytics-content:/var/www/html"
    networks:
      - overlay
      - traefik-net
    env_file:
      - .env
    environment:
      - MATOMO_DATABASE_HOST=db
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.services.bde-cesi-analytics.loadbalancer.server.port: "80"

        traefik.http.routers.bde-cesi-analytics.entrypoints: web-secure
        traefik.http.routers.bde-cesi-analytics.rule: "Host(`analytics.bdecesilyon.fr`)"
        traefik.http.routers.bde-cesi-analytics.tls.certresolver: letsencrypt

        traefik.http.routers.bde-cesi-analytics-insecure.entrypoints: web
        traefik.http.routers.bde-cesi-analytics-insecure.rule: "Host(`analytics.bdecesilyon.fr`)"
        traefik.http.routers.bde-cesi-analytics-insecure.middlewares: force-https@file

  post-quester:
    image: "epickiwi/post-quester"
    networks:
      - overlay
    env_file:
      - .env
    environment:
      - POSTS_API_HOST=http://proxy

  elasticsearch:
    image: "elasticsearch:7.6.0"
    networks:
      - overlay
    environment:
      - discovery.type=single-node
      - xpack.security.enabled="false"
      - xpack.monitoring.enabled="false"
      - xpack.graph.enabled="false"
      - xpack.watcher.enabled="false"
    volumes:
      - elasticsearch-persistant:/usr/share/elasticsearch/data

volumes:
  user-media:
  db-content:
  analytics-db-content:
  analytics-content:
  static-files:
  elasticsearch-persistant:

networks:
  overlay:
  traefik-net:
    external: true